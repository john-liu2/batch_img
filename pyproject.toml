[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=80.0"]

[project]
name = "batch_img"
version = "0.2.1"
description = "Batch process (resize, rotate, remove GPS, add border, set transparency, auto do all) image files (HEIC, JPG, PNG)"
readme = "README.md"
authors = [{ name = "John Liu", email = "rim2rim@gmail.com" }]
license = "MIT"
license-files = ["LICENSE"]
classifiers = [
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Programming Language :: Python :: 3 :: Only",
    "Operating System :: OS Independent",
]
requires-python = ">=3.12"
dependencies = [
    "click",
    "httpx",
    "loguru",
    "numpy",
    "opencv-python",
    "packaging",
    "piexif",
    "pillow",
    "pillow-heif",
    "tqdm",
]
[project.scripts]
batch_img = "batch_img.interface:cli"

[project.urls]
Download = "https://pypi.org/project/batch-img/"
Homepage = "https://github.com/john-liu2/batch_img"

[tool.setuptools.packages.find]
include = ["*"]

# Dev config
[project.optional-dependencies]
# uv pip compile pyproject.toml -o requirements.txt
# uv pip install -e '.[dev]'
dev = [
    "pytest-cov", # also install pytest
    "black>=25.1.0",
    "ruff",
    "pre-commit", # rules are in .pre-commit-config.yaml
    "pylint",
]

[tool.ruff]
line-length = 88
lint.select = [
    "B", # bugbear
    "E", # pycodestyle errors
    "F", # pyflakes
    "I", # isort
    "UP", # pyupgrade
    "PD", # pandas-vet
    "RET", # flake8-return (includes no-else-return)
    "PL", # pylint
    "C416", # Unnecessary comprehension (R1721 from Pylint)
]
lint.ignore = [
    "RET504",
    "PLR0913",
    "PLR0917",
    "PLR0904",
    "PLR2004", # Magic value used in comparison, consider replacing `3` with a constant variable
    "E266", # Too many leading `#` before block comment
]
lint.fixable = ["E", "F", "I", "UP"]
preview = true
exclude = [
    "**/venv/",
    "**/__pycache__/",
    "**/migrations/",
    "**/tests/",
    "**/build/",
    "**/generated/**/*.py",
]

[tool.pytest.ini_options]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "serial",
]
[run]
parallel = true
